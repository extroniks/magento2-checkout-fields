<?php
/**
 * Copyright Â© Magento, Inc. All rights reserved.
 * See COPYING.txt for license details.
 */
// @codingStandardsIgnoreFile
?>

<?php
$_htmlId  = $block->getHtmlId() ? $block->getHtmlId() : '_' . uniqid();
$_colspan = $block->isAddAfter() ? 2 : 1;
?>
<style>
    #checkoutfields_general > table > tbody > tr > td.label,
    #checkoutfields_general > table > tbody > tr > td.value  {
        display: block;
        width: 100%;
        text-align: left;
    }

    #checkoutfields_general td.use-default {
        padding-top: 61px;
        padding-left: 10px;
    }

    #checkoutfields_general .label span[data-config-scope]::before {
        left: 0;
    }

    #checkoutfields_general colgroup {
        display: none;
    }
</style>
<div class="design_theme_ua_regexp" id="grid<?= /* @escapeNotVerified */ $_htmlId ?>">
    <div class="admin__control-table-wrapper">
        <table class="admin__control-table" id="<?= /* @escapeNotVerified */ $block->getElement()->getId() ?>">
            <thead>
                <tr>
                    <?php foreach ($block->getColumns() as $columnName => $column): ?>
                        <th><?= /* @escapeNotVerified */ $column['label'] ?></th>
                    <?php endforeach; ?>
                    <th class="col-actions" colspan="<?= /* @escapeNotVerified */ $_colspan ?>"><?= /* @escapeNotVerified */ __('Action') ?></th>
                </tr>
            </thead>
            <tfoot>
                <tr>
                    <td colspan="<?= count($block->getColumns()) + $_colspan ?>" class="col-actions-add">
                        <button id="addToEndBtn<?= /* @escapeNotVerified */ $_htmlId ?>" class="action-add" title="<?= /* @escapeNotVerified */ __('Add') ?>" type="button">
                            <span><?= /* @escapeNotVerified */ $block->getAddButtonLabel() ?></span>
                        </button>
                    </td>
                </tr>
            </tfoot>
            <tbody id="addRow<?= /* @escapeNotVerified */ $_htmlId ?>"></tbody>
        </table>
    </div>
    <input type="hidden" name="<?= /* @escapeNotVerified */ $block->getElement()->getName() ?>[__empty]" value="" />

    <script>
        require([
                'mage/template',
                'prototype'
        ], function (mageTemplate) {
        // create row creator
        window.arrayRow<?= /* @escapeNotVerified */ $_htmlId ?> = {

        columnNames: <?= json_encode(array_keys($block->getColumns())); ?>,

        // define row prototypeJS template
        template: mageTemplate(
                '<tr id="<%- _id %>">'
<?php foreach ($block->getColumns() as $columnName => $column): ?>
                + '<td class="<?php echo $columnName; ?>">'
                        + '<?= /* @escapeNotVerified */ $block->renderCellTemplate($columnName) ?>'
                        + '<\/td>'
        <?php endforeach; ?>

<?php if ($block->isAddAfter()): ?>
                + '<td><button class="action-add" type="button" id="addAfterBtn<%- _id %>"><span><?= /* @escapeNotVerified */ __('Add after') ?><\/span><\/button><\/td>'
        <?php endif; ?>

        + '<td class="col-actions"><button onclick="arrayRow<?= /* @escapeNotVerified */ $_htmlId ?>.del(\'<%- _id %>\')" class="action-delete" type="button"><span><?= /* @escapeNotVerified */ __('Delete') ?><\/span><\/button><\/td>'
                + '<\/tr>'
                ),
                add: function(rowData, insertAfterId) {

                // generate default template data
                var templateValues;
                // Prepare template values
                if (rowData) {
                templateValues = rowData;
                } else {
                var d = new Date();
                templateValues = {
<?php foreach ($block->getColumns() as $columnName => $column): ?>
            <?= /* @escapeNotVerified */ $columnName ?>: '',
                                'option_extra_attrs': {},
        <?php endforeach; ?>
                _id: '_' + d.getTime() + '_' + d.getMilliseconds()
                };
                }

                var keepColumns = ['_id', 'option_extra_attrs', 'column_values'];

                var dataKeys = Object.keys(templateValues);
                for(let i = 0; i < dataKeys.length; i++) {
                    if(!this.columnNames.includes(dataKeys[i]) && !keepColumns.includes(dataKeys[i])) {
                        delete templateValues[dataKeys[i]];
                    }
                }

                for(let i = 0; i < this.columnNames.length; i++) {
                    if(!templateValues[this.columnNames[i]]) {
                        templateValues[this.columnNames[i]] = '';
                    }
                }

                // Insert new row after specified row or at the bottom
                if (insertAfterId) {
                Element.insert($(insertAfterId), {after: this.template(templateValues)});
                } else {
                Element.insert($('addRow<?= /* @escapeNotVerified */ $_htmlId ?>'), {bottom: this.template(templateValues)});
                }

                // Fill controls with data
                if (rowData) {
                var rowInputElementNames = Object.keys(rowData.column_values);
                for (var i = 0; i < rowInputElementNames.length; i++) {
                if ($(rowInputElementNames[i])) {
                $(rowInputElementNames[i]).setValue(rowData.column_values[rowInputElementNames[i]]);
                }
                }
                }

                // Add event for {addAfterBtn} button
<?php if ($block->isAddAfter()): ?>
                        Event.observe('addAfterBtn' + templateValues._id, 'click', this.add.bind(this, false, templateValues._id));
        <?php endif; ?>
                },
                del: function(rowId) {
                $(rowId).remove();
                }
        }

        // bind add action to "Add" button in last row
        Event.observe('addToEndBtn<?= /* @escapeNotVerified */ $_htmlId ?>', 'click', arrayRow<?= /* @escapeNotVerified */ $_htmlId ?>.add.bind(arrayRow<?= /* @escapeNotVerified */ $_htmlId ?>, false, false));
        // add existing rows
<?php
foreach ($block->getArrayRows() as $_rowId => $_row) {
    /* @escapeNotVerified */ echo "arrayRow{$_htmlId}.add(" . $_row->toJson() . ");\n";
}
?>

        // Toggle the grid availability, if element is disabled (depending on scope)
<?php if ($block->getElement()->getDisabled()): ?>
                toggleValueElements({checked: true}, $('grid<?= /* @escapeNotVerified */ $_htmlId ?>').parentNode);
        <?php endif; ?>
        });
    </script>
</div>
